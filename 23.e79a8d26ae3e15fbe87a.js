(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{"3sL2":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">form</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"form"</span> (<span class="hljs-attr">ngSubmit</span>)=<span class="hljs-string">"submit()"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">formly-form</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span> [<span class="hljs-attr">fields</span>]=<span class="hljs-string">"fields"</span> [<span class="hljs-attr">options</span>]=<span class="hljs-string">"options"</span> [<span class="hljs-attr">form</span>]=<span class="hljs-string">"form"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">formly-form</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"btn btn-primary submit-button"</span>&gt;</span>Submit<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n'},"89nE":function(s,n){s.exports='<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { HttpClientModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common/http\'</span>;\n<span class="hljs-keyword">import</span> { ReactiveFormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n<span class="hljs-keyword">import</span> { FormlyBootstrapModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/bootstrap\'</span>;\n\n<span class="hljs-keyword">import</span> { AppComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./app.component\'</span>;\n\n<span class="hljs-keyword">import</span> { UserService } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./user.service\'</span>;\n\n<span class="hljs-meta">@NgModule</span>({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormlyBootstrapModule,\n    FormlyModule.forRoot(),\n  ],\n  declarations: [\n    AppComponent,\n  ],\n  providers: [UserService],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppModule { }\n'},HhG4:function(s,n,a){"use strict";a.r(n);var l=a("CcnG"),e=a("gIcY"),o=a("VNr4"),t=function(){function s(s){this.http=s}return s.prototype.getUserData=function(){return Object(o.a)([this.getUser(),this.getFields()])},s.prototype.getUser=function(){return this.http.get("assets/json-powered/user_json")},s.prototype.getFields=function(){return this.http.get("assets/json-powered/user-form_json")},s}(),p=function(){function s(s){var n=this;this.userService=s,this.form=new e.FormGroup({}),this.options={},this.userService.getUserData().subscribe(function(s){var a=s[1];n.model=s[0],n.fields=a})}return s.prototype.submit=function(){this.form.valid&&alert(JSON.stringify(this.model))},s}(),r={examples:[{title:"JSON powered",description:"\n              This is an example of powering a form strictly by JSON. The common use case for this\n              would be to persist the form configuration in the database and then send the configuration\n              up to power the form. Notice that you can still use most features like <code>expressionProperties</code>\n              and <code>validators</code> even in a string form.\n            ",component:p,files:[{file:"app.component.html",content:a("3sL2"),filecontent:a("ov6x")},{file:"app.component.ts",content:a("k6tv"),filecontent:a("tx+t")},{file:"user.service.ts",content:a("sGnT"),filecontent:a("YHEr")},{file:"assets/json-powered/user.json",content:a("y5Tz"),filecontent:a("dJ49")},{file:"assets/json-powered/user-form.json",content:a("PM6v"),filecontent:a("s0YJ")},{file:"app.module.ts",content:a("89nE"),filecontent:a("y+Qq")}]}]},i=function(){return function(){}}(),m=a("NcP4"),c=a("goW2"),d=a("htty"),u=a("LgGJ"),h=a("MT1c"),g=a("1Q/V"),f=a("9+aI"),j=a("haId"),y=a("LJsP"),b=a("yR2A"),k=a("UFMs"),v=a("pMnS"),w=a("4o01"),F=a("Dl9q"),C=a("9Glx"),x=a("UcnZ"),M=l["\u0275crt"]({encapsulation:2,styles:[],data:{}});function N(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,8,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"ngSubmit"],[null,"submit"],[null,"reset"]],function(s,n,a){var e=!0,o=s.component;return"submit"===n&&(e=!1!==l["\u0275nov"](s,2).onSubmit(a)&&e),"reset"===n&&(e=!1!==l["\u0275nov"](s,2).onReset()&&e),"ngSubmit"===n&&(e=!1!==o.submit()&&e),e},null,null)),l["\u0275did"](1,16384,null,0,e["\u0275angular_packages_forms_forms_bh"],[],null,null),l["\u0275did"](2,540672,null,0,e.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},{ngSubmit:"ngSubmit"}),l["\u0275prd"](2048,null,e.ControlContainer,null,[e.FormGroupDirective]),l["\u0275did"](4,16384,null,0,e.NgControlStatusGroup,[[4,e.ControlContainer]],null,null),(s()(),l["\u0275eld"](5,0,null,null,1,"formly-form",[],null,null,null,F.b,F.a)),l["\u0275did"](6,966656,null,0,C.a,[x.a,l.ComponentFactoryResolver,l.Injector,[2,e.NgForm],[8,null],[2,e.FormGroupDirective],[3,C.a]],{form:[0,"form"],model:[1,"model"],fields:[2,"fields"],options:[3,"options"]},null),(s()(),l["\u0275eld"](7,0,null,null,1,"button",[["class","btn btn-primary submit-button"],["type","submit"]],null,null,null,null,null)),(s()(),l["\u0275ted"](-1,null,["Submit"]))],function(s,n){var a=n.component;s(n,2,0,a.form),s(n,6,0,a.form,a.model,a.fields,a.options)},function(s,n){s(n,0,0,l["\u0275nov"](n,4).ngClassUntouched,l["\u0275nov"](n,4).ngClassTouched,l["\u0275nov"](n,4).ngClassPristine,l["\u0275nov"](n,4).ngClassDirty,l["\u0275nov"](n,4).ngClassValid,l["\u0275nov"](n,4).ngClassInvalid,l["\u0275nov"](n,4).ngClassPending)})}function S(s){return l["\u0275vid"](0,[(s()(),l["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,N,M)),l["\u0275did"](1,49152,null,0,p,[t],null,null)],null,null)}var _=l["\u0275ccf"]("formly-app-example",p,S,{},{},[]),O=a("Ip0R"),U=a("M2Lx"),A=a("eDkP"),R=a("Fzqc"),G=a("v9Dh"),J=a("ZYjt"),D=a("Wf4p"),L=a("6LlJ"),I=a("F6kA"),P=a("t/Na"),E=a("DAbo"),T=a("dWZg"),H=a("lLAP"),B=a("4c35"),W=a("qAlS"),Y=a("La40"),q=a("SMsm"),Q=a("UodH"),Z=a("5QwG"),z=a("qkla"),V=a("iZhS"),X=a("XR12"),K=a("me7w"),$=a("N3PW"),ss=a("l4pn"),ns=a("Fv2i"),as=a("wBYW"),ls=a("IE48"),es=a("Q4Tx"),os=a("Nsh5"),ts=a("8mMr"),ps=a("LC5p"),rs=a("0/Q6"),is=a("mqvi"),ms=a("lYui"),cs=a("VGFS"),ds=a("1ey0"),us=function(){return function(){}}(),hs=a("ZYCi"),gs=a("cIcG");a.d(n,"ConfigModuleNgFactory",function(){return fs});var fs=l["\u0275cmf"](i,[],function(s){return l["\u0275mod"]([l["\u0275mpd"](512,l.ComponentFactoryResolver,l["\u0275CodegenComponentFactoryResolver"],[[8,[m.a,c.a,d.a,u.a,h.a,g.a,f.a,j.a,y.a,b.a,k.a,v.a,w.a,_]],[3,l.ComponentFactoryResolver],l.NgModuleRef]),l["\u0275mpd"](4608,O.NgLocalization,O.NgLocaleLocalization,[l.LOCALE_ID,[2,O["\u0275angular_packages_common_common_a"]]]),l["\u0275mpd"](4608,U.c,U.c,[]),l["\u0275mpd"](4608,A.c,A.c,[A.i,A.e,l.ComponentFactoryResolver,A.h,A.f,l.Injector,l.NgZone,O.DOCUMENT,R.b,[2,O.Location]]),l["\u0275mpd"](5120,A.j,A.k,[A.c]),l["\u0275mpd"](5120,G.b,G.c,[A.c]),l["\u0275mpd"](4608,J.HAMMER_GESTURE_CONFIG,D.c,[[2,D.g],[2,D.l]]),l["\u0275mpd"](4608,L.a,L.a,[]),l["\u0275mpd"](4608,I.a,I.a,[]),l["\u0275mpd"](4608,P.h,P.n,[O.DOCUMENT,l.PLATFORM_ID,P.l]),l["\u0275mpd"](4608,P.o,P.o,[P.h,P.m]),l["\u0275mpd"](5120,P.a,function(s){return[s]},[P.o]),l["\u0275mpd"](4608,P.k,P.k,[]),l["\u0275mpd"](6144,P.i,null,[P.k]),l["\u0275mpd"](4608,P.g,P.g,[P.i]),l["\u0275mpd"](6144,P.b,null,[P.g]),l["\u0275mpd"](4608,P.f,P.j,[P.b,l.Injector]),l["\u0275mpd"](4608,P.c,P.c,[P.f]),l["\u0275mpd"](4608,e.FormBuilder,e.FormBuilder,[]),l["\u0275mpd"](4608,e["\u0275angular_packages_forms_forms_j"],e["\u0275angular_packages_forms_forms_j"],[]),l["\u0275mpd"](4608,x.a,x.a,[E.b,l.ComponentFactoryResolver,l.Injector]),l["\u0275mpd"](4608,t,t,[P.c]),l["\u0275mpd"](1073742336,O.CommonModule,O.CommonModule,[]),l["\u0275mpd"](1073742336,T.b,T.b,[]),l["\u0275mpd"](1073742336,U.d,U.d,[]),l["\u0275mpd"](1073742336,H.a,H.a,[]),l["\u0275mpd"](1073742336,R.a,R.a,[]),l["\u0275mpd"](1073742336,B.g,B.g,[]),l["\u0275mpd"](1073742336,W.c,W.c,[]),l["\u0275mpd"](1073742336,A.g,A.g,[]),l["\u0275mpd"](1073742336,D.l,D.l,[[2,D.d],[2,J.HAMMER_LOADER]]),l["\u0275mpd"](1073742336,G.e,G.e,[]),l["\u0275mpd"](1073742336,D.v,D.v,[]),l["\u0275mpd"](1073742336,Y.j,Y.j,[]),l["\u0275mpd"](1073742336,q.c,q.c,[]),l["\u0275mpd"](1073742336,Q.c,Q.c,[]),l["\u0275mpd"](1073742336,Z.b,Z.b,[]),l["\u0275mpd"](512,E.b,E.b,[]),l["\u0275mpd"](1024,E.a,function(s,n){return[{wrappers:[{name:"addons",component:z.a}],extensions:[{name:"addons",extension:{postPopulate:V.a}}]},X.b(s),{types:[{name:"input",component:K.a,wrappers:["form-field"]},{name:"checkbox",component:$.a,wrappers:["form-field"]},{name:"radio",component:ss.a,wrappers:["form-field"]},{name:"select",component:ns.a,wrappers:["form-field"]},{name:"textarea",component:as.a,wrappers:["form-field"]},{name:"multicheckbox",component:ls.a,wrappers:["form-field"]}],wrappers:[{name:"form-field",component:es.a}]},X.b(n),{}]},[E.b,E.b]),l["\u0275mpd"](1073742336,X.a,X.a,[E.b,[2,E.a]]),l["\u0275mpd"](1073742336,os.h,os.h,[]),l["\u0275mpd"](1073742336,ts.b,ts.b,[]),l["\u0275mpd"](1073742336,D.m,D.m,[]),l["\u0275mpd"](1073742336,D.t,D.t,[]),l["\u0275mpd"](1073742336,ps.b,ps.b,[]),l["\u0275mpd"](1073742336,rs.c,rs.c,[]),l["\u0275mpd"](1073742336,is.a,is.a,[]),l["\u0275mpd"](1073742336,P.e,P.e,[]),l["\u0275mpd"](1073742336,P.d,P.d,[]),l["\u0275mpd"](1073742336,e["\u0275angular_packages_forms_forms_bc"],e["\u0275angular_packages_forms_forms_bc"],[]),l["\u0275mpd"](1073742336,e.ReactiveFormsModule,e.ReactiveFormsModule,[]),l["\u0275mpd"](1073742336,ms.a,ms.a,[]),l["\u0275mpd"](1073742336,cs.a,cs.a,[]),l["\u0275mpd"](1073742336,ds.a,ds.a,[]),l["\u0275mpd"](1073742336,us,us,[]),l["\u0275mpd"](1073742336,hs.s,hs.s,[[2,hs.y],[2,hs.p]]),l["\u0275mpd"](1073742336,i,i,[]),l["\u0275mpd"](256,P.l,"XSRF-TOKEN",[]),l["\u0275mpd"](256,P.m,"X-XSRF-TOKEN",[]),l["\u0275mpd"](1024,hs.n,function(){return[[{path:"",component:gs.a,data:r}]]},[])])})},PM6v:function(s,n){s.exports='[\n  {\n    <span class="hljs-string">"key"</span>: <span class="hljs-string">"firstName"</span>,\n    <span class="hljs-string">"type"</span>: <span class="hljs-string">"input"</span>,\n    <span class="hljs-string">"templateOptions"</span>: {\n      <span class="hljs-string">"label"</span>: <span class="hljs-string">"First Name"</span>\n    }\n  },\n  {\n    <span class="hljs-string">"key"</span>: <span class="hljs-string">"lastName"</span>,\n    <span class="hljs-string">"type"</span>: <span class="hljs-string">"input"</span>,\n    <span class="hljs-string">"templateOptions"</span>: {\n      <span class="hljs-string">"label"</span>: <span class="hljs-string">"Last Name"</span>\n    }\n  },\n  {\n    <span class="hljs-string">"key"</span>: <span class="hljs-string">"mac"</span>,\n    <span class="hljs-string">"type"</span>: <span class="hljs-string">"input"</span>,\n    <span class="hljs-string">"templateOptions"</span>: {\n      <span class="hljs-string">"label"</span>: <span class="hljs-string">"Mac Address"</span>,\n      <span class="hljs-string">"pattern"</span>: <span class="hljs-string">"([0-9A-F]{2}[:-]){5}([0-9A-F]{2})"</span>\n    }\n  },\n  {\n    <span class="hljs-string">"key"</span>: <span class="hljs-string">"color"</span>,\n    <span class="hljs-string">"type"</span>: <span class="hljs-string">"radio"</span>,\n    <span class="hljs-string">"templateOptions"</span>: {\n      <span class="hljs-string">"label"</span>: <span class="hljs-string">"Color Preference (try this out)"</span>,\n      <span class="hljs-string">"options"</span>: [\n        {\n          <span class="hljs-string">"label"</span>: <span class="hljs-string">"No Preference"</span>,\n          <span class="hljs-string">"value"</span>: <span class="hljs-literal">null</span>\n        },\n        {\n          <span class="hljs-string">"label"</span>: <span class="hljs-string">"Green"</span>,\n          <span class="hljs-string">"value"</span>: <span class="hljs-string">"green"</span>\n        },\n        {\n          <span class="hljs-string">"label"</span>: <span class="hljs-string">"Blue"</span>,\n          <span class="hljs-string">"value"</span>: <span class="hljs-string">"blue"</span>\n        }\n      ]\n    }\n  },\n  {\n    <span class="hljs-string">"key"</span>: <span class="hljs-string">"reason"</span>,\n    <span class="hljs-string">"type"</span>: <span class="hljs-string">"textarea"</span>,\n    <span class="hljs-string">"templateOptions"</span>: {\n      <span class="hljs-string">"label"</span>: <span class="hljs-string">"Why?"</span>\n    },\n    <span class="hljs-string">"expressionProperties"</span>: {\n      <span class="hljs-string">"templateOptions.label"</span>: <span class="hljs-string">"\'Why did you choose \' + model.color + \'?\'"</span>\n    },\n    <span class="hljs-string">"hideExpression"</span>: <span class="hljs-string">"!model.color"</span>\n  }\n]\n'},YHEr:function(s,n){s.exports="import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\n\n@Injectable()\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  getUserData(): Observable<any> {\n    return forkJoin([this.getUser(), this.getFields()]);\n  }\n\n  getUser() {\n    return this.http.get<{ firstName: string, lastName: string }>('assets/json-powered/user_json');\n  }\n\n  getFields() {\n    return this.http.get<FormlyFieldConfig[]>('assets/json-powered/user-form_json');\n  }\n}\n"},dJ49:function(s,n){s.exports='{\n  "firstName": "Joan",\n  "lastName": "of Arc"\n}\n'},k6tv:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyFormOptions, FormlyFieldConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n<span class="hljs-keyword">import</span> { UserService } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./user.service\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-app-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  form = <span class="hljs-keyword">new</span> FormGroup({});\n  options: FormlyFormOptions = {};\n\n  model;\n  fields: FormlyFieldConfig[];\n\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> userService: UserService</span>) {\n    <span class="hljs-keyword">this</span>.userService.getUserData().subscribe(<span class="hljs-function">(<span class="hljs-params">[model, fields]</span>) =&gt;</span> {\n      <span class="hljs-keyword">this</span>.model = model;\n      <span class="hljs-keyword">this</span>.fields = fields;\n    });\n  }\n\n  submit() {\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.form.valid) {\n      alert(<span class="hljs-built_in">JSON</span>.stringify(<span class="hljs-keyword">this</span>.model));\n    }\n  }\n}\n'},ov6x:function(s,n){s.exports='<form [formGroup]="form" (ngSubmit)="submit()">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n  <button type="submit" class="btn btn-primary submit-button">Submit</button>\n</form>\n'},s0YJ:function(s,n){s.exports='[\n  {\n    "key": "firstName",\n    "type": "input",\n    "templateOptions": {\n      "label": "First Name"\n    }\n  },\n  {\n    "key": "lastName",\n    "type": "input",\n    "templateOptions": {\n      "label": "Last Name"\n    }\n  },\n  {\n    "key": "mac",\n    "type": "input",\n    "templateOptions": {\n      "label": "Mac Address",\n      "pattern": "([0-9A-F]{2}[:-]){5}([0-9A-F]{2})"\n    }\n  },\n  {\n    "key": "color",\n    "type": "radio",\n    "templateOptions": {\n      "label": "Color Preference (try this out)",\n      "options": [\n        {\n          "label": "No Preference",\n          "value": null\n        },\n        {\n          "label": "Green",\n          "value": "green"\n        },\n        {\n          "label": "Blue",\n          "value": "blue"\n        }\n      ]\n    }\n  },\n  {\n    "key": "reason",\n    "type": "textarea",\n    "templateOptions": {\n      "label": "Why?"\n    },\n    "expressionProperties": {\n      "templateOptions.label": "\'Why did you choose \' + model.color + \'?\'"\n    },\n    "hideExpression": "!model.color"\n  }\n]\n'},sGnT:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Injectable } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { HttpClient } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common/http\'</span>;\n<span class="hljs-keyword">import</span> { Observable, forkJoin } <span class="hljs-keyword">from</span> <span class="hljs-string">\'rxjs\'</span>;\n<span class="hljs-keyword">import</span> { FormlyFieldConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Injectable</span>()\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> UserService {\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> http: HttpClient</span>) {}\n\n  getUserData(): Observable&lt;<span class="hljs-built_in">any</span>&gt; {\n    <span class="hljs-keyword">return</span> forkJoin([<span class="hljs-keyword">this</span>.getUser(), <span class="hljs-keyword">this</span>.getFields()]);\n  }\n\n  getUser() {\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.http.get&lt;{ firstName: <span class="hljs-built_in">string</span>, lastName: <span class="hljs-built_in">string</span> }&gt;(<span class="hljs-string">\'assets/json-powered/user_json\'</span>);\n  }\n\n  getFields() {\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.http.get&lt;FormlyFieldConfig[]&gt;(<span class="hljs-string">\'assets/json-powered/user-form_json\'</span>);\n  }\n}\n'},"tx+t":function(s,n){s.exports="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\nimport { UserService } from './user.service';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  options: FormlyFormOptions = {};\n\n  model;\n  fields: FormlyFieldConfig[];\n\n  constructor(private userService: UserService) {\n    this.userService.getUserData().subscribe(([model, fields]) => {\n      this.model = model;\n      this.fields = fields;\n    });\n  }\n\n  submit() {\n    if (this.form.valid) {\n      alert(JSON.stringify(this.model));\n    }\n  }\n}\n"},"y+Qq":function(s,n){s.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\n\nimport { AppComponent } from './app.component';\n\nimport { UserService } from './user.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormlyBootstrapModule,\n    FormlyModule.forRoot(),\n  ],\n  declarations: [\n    AppComponent,\n  ],\n  providers: [UserService],\n})\nexport class AppModule { }\n"},y5Tz:function(s,n){s.exports='{\n  <span class="hljs-string">"firstName"</span>: <span class="hljs-string">"Joan"</span>,\n  <span class="hljs-string">"lastName"</span>: <span class="hljs-string">"of Arc"</span>\n}\n'}}]);