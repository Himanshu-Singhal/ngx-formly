(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{"6QX0":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyFormOptions, FormlyFieldConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'formly-app-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  form = <span class="hljs-keyword">new</span> FormGroup({});\n  model: <span class="hljs-built_in">any</span> = {};\n  options: FormlyFormOptions = {};\n\n  fields: FormlyFieldConfig[] = [{\n    key: <span class="hljs-string">\'password\'</span>,\n    validators: {\n      fieldMatch: {\n        expression: <span class="hljs-function">(<span class="hljs-params">control</span>) =&gt;</span> {\n          <span class="hljs-keyword">const</span> value = control.value;\n\n          <span class="hljs-keyword">return</span> value.passwordConfirm === value.password\n            <span class="hljs-comment">// avoid displaying the message error when values are empty</span>\n            || (!value.passwordConfirm || !value.password);\n        },\n        message: <span class="hljs-string">\'Password Not Matching\'</span>,\n        errorPath: <span class="hljs-string">\'passwordConfirm\'</span>,\n      },\n    },\n    fieldGroup: [\n      {\n        key: <span class="hljs-string">\'password\'</span>,\n        <span class="hljs-keyword">type</span>: <span class="hljs-string">\'input\'</span>,\n        templateOptions: {\n          <span class="hljs-keyword">type</span>: <span class="hljs-string">\'password\'</span>,\n          label: <span class="hljs-string">\'Password\'</span>,\n          placeholder: <span class="hljs-string">\'Must be at least 3 characters\'</span>,\n          required: <span class="hljs-literal">true</span>,\n          minLength: <span class="hljs-number">3</span>,\n        },\n      },\n      {\n        key: <span class="hljs-string">\'passwordConfirm\'</span>,\n        <span class="hljs-keyword">type</span>: <span class="hljs-string">\'input\'</span>,\n        templateOptions: {\n          <span class="hljs-keyword">type</span>: <span class="hljs-string">\'password\'</span>,\n          label: <span class="hljs-string">\'Confirm Password\'</span>,\n          placeholder: <span class="hljs-string">\'Please re-enter your password\'</span>,\n          required: <span class="hljs-literal">true</span>,\n        },\n      },\n    ],\n  }];\n\n  submit() {\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.form.valid) {\n      alert(<span class="hljs-built_in">JSON</span>.stringify(<span class="hljs-keyword">this</span>.model));\n    }\n  }\n}\n'},CjK9:function(s,n,a){"use strict";a.r(n);var o=a("CcnG"),l=a("gIcY"),e=function(){function s(){this.form=new l.FormGroup({}),this.model={},this.options={},this.fields=[{key:"password",validators:{fieldMatch:{expression:function(s){var n=s.value;return n.passwordConfirm===n.password||!n.passwordConfirm||!n.password},message:"Password Not Matching",errorPath:"passwordConfirm"}},fieldGroup:[{key:"password",type:"input",templateOptions:{type:"password",label:"Password",placeholder:"Must be at least 3 characters",required:!0,minLength:3}},{key:"passwordConfirm",type:"input",templateOptions:{type:"password",label:"Confirm Password",placeholder:"Please re-enter your password",required:!0}}]}]}return s.prototype.submit=function(){this.form.valid&&alert(JSON.stringify(this.model))},s}(),r={examples:[{title:"Matching Two Fields",description:"This is an example of how to add confirm password field using custom validation",component:e,files:[{file:"app.component.html",content:a("uKvD"),filecontent:a("hyt6")},{file:"app.component.ts",content:a("6QX0"),filecontent:a("txKx")},{file:"app.module.ts",content:a("FMHf"),filecontent:a("amrZ")}]}]},p=function(){return function(){}}(),t=a("NcP4"),m=a("goW2"),i=a("htty"),d=a("LgGJ"),c=a("MT1c"),u=a("1Q/V"),f=a("9+aI"),h=a("haId"),g=a("LJsP"),y=a("yR2A"),j=a("UFMs"),w=a("pMnS"),b=a("4o01"),v=a("Dl9q"),C=a("9Glx"),k=a("UcnZ"),M=o["\u0275crt"]({encapsulation:2,styles:[],data:{}});function F(s){return o["\u0275vid"](0,[(s()(),o["\u0275eld"](0,0,null,null,8,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"ngSubmit"],[null,"submit"],[null,"reset"]],function(s,n,a){var l=!0,e=s.component;return"submit"===n&&(l=!1!==o["\u0275nov"](s,2).onSubmit(a)&&l),"reset"===n&&(l=!1!==o["\u0275nov"](s,2).onReset()&&l),"ngSubmit"===n&&(l=!1!==e.submit()&&l),l},null,null)),o["\u0275did"](1,16384,null,0,l["\u0275angular_packages_forms_forms_bh"],[],null,null),o["\u0275did"](2,540672,null,0,l.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},{ngSubmit:"ngSubmit"}),o["\u0275prd"](2048,null,l.ControlContainer,null,[l.FormGroupDirective]),o["\u0275did"](4,16384,null,0,l.NgControlStatusGroup,[[4,l.ControlContainer]],null,null),(s()(),o["\u0275eld"](5,0,null,null,1,"formly-form",[],null,null,null,v.b,v.a)),o["\u0275did"](6,966656,null,0,C.a,[k.a,o.ComponentFactoryResolver,o.Injector,[2,l.NgForm],[2,l.FormGroupDirective],[3,C.a]],{model:[0,"model"],form:[1,"form"],fields:[2,"fields"],options:[3,"options"]},null),(s()(),o["\u0275eld"](7,0,null,null,1,"button",[["class","btn btn-primary submit-button"],["type","submit"]],null,null,null,null,null)),(s()(),o["\u0275ted"](-1,null,["Submit"]))],function(s,n){var a=n.component;s(n,2,0,a.form),s(n,6,0,a.model,a.form,a.fields,a.options)},function(s,n){s(n,0,0,o["\u0275nov"](n,4).ngClassUntouched,o["\u0275nov"](n,4).ngClassTouched,o["\u0275nov"](n,4).ngClassPristine,o["\u0275nov"](n,4).ngClassDirty,o["\u0275nov"](n,4).ngClassValid,o["\u0275nov"](n,4).ngClassInvalid,o["\u0275nov"](n,4).ngClassPending)})}function x(s){return o["\u0275vid"](0,[(s()(),o["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,F,M)),o["\u0275did"](1,49152,null,0,e,[],null,null)],null,null)}var _=o["\u0275ccf"]("formly-app-example",e,x,{},{},[]),P=a("Ip0R"),R=a("M2Lx"),S=a("eDkP"),G=a("Fzqc"),N=a("v9Dh"),L=a("ZYjt"),O=a("Wf4p"),q=a("6LlJ"),A=a("F6kA"),D=a("DAbo"),I=a("dWZg"),T=a("lLAP"),E=a("4c35"),J=a("qAlS"),U=a("La40"),Z=a("SMsm"),B=a("UodH"),V=a("5QwG"),Q=a("qkla"),H=a("iZhS"),K=a("XR12"),W=a("me7w"),Y=a("N3PW"),z=a("l4pn"),X=a("Fv2i"),$=a("wBYW"),ss=a("IE48"),ns=a("Q4Tx");function as(s,n){return"Should have atleast "+n.templateOptions.minLength+" characters"}var os=function(){return function(){}}(),ls=a("Nsh5"),es=a("8mMr"),rs=a("LC5p"),ps=a("0/Q6"),ts=a("mqvi"),ms=a("lYui"),is=a("VGFS"),ds=a("1ey0"),cs=a("ZYCi"),us=a("cIcG");a.d(n,"ConfigModuleNgFactory",function(){return fs});var fs=o["\u0275cmf"](p,[],function(s){return o["\u0275mod"]([o["\u0275mpd"](512,o.ComponentFactoryResolver,o["\u0275CodegenComponentFactoryResolver"],[[8,[t.a,m.a,i.a,d.a,c.a,u.a,f.a,h.a,g.a,y.a,j.a,w.a,b.a,_]],[3,o.ComponentFactoryResolver],o.NgModuleRef]),o["\u0275mpd"](4608,P.NgLocalization,P.NgLocaleLocalization,[o.LOCALE_ID,[2,P["\u0275angular_packages_common_common_a"]]]),o["\u0275mpd"](4608,R.c,R.c,[]),o["\u0275mpd"](4608,S.c,S.c,[S.i,S.e,o.ComponentFactoryResolver,S.h,S.f,o.Injector,o.NgZone,P.DOCUMENT,G.b,[2,P.Location]]),o["\u0275mpd"](5120,S.j,S.k,[S.c]),o["\u0275mpd"](5120,N.b,N.c,[S.c]),o["\u0275mpd"](4608,L.HAMMER_GESTURE_CONFIG,O.c,[[2,O.g],[2,O.l]]),o["\u0275mpd"](4608,q.a,q.a,[]),o["\u0275mpd"](4608,A.a,A.a,[]),o["\u0275mpd"](4608,l.FormBuilder,l.FormBuilder,[]),o["\u0275mpd"](4608,l["\u0275angular_packages_forms_forms_j"],l["\u0275angular_packages_forms_forms_j"],[]),o["\u0275mpd"](4608,k.a,k.a,[D.b,o.ComponentFactoryResolver,o.Injector]),o["\u0275mpd"](1073742336,P.CommonModule,P.CommonModule,[]),o["\u0275mpd"](1073742336,I.b,I.b,[]),o["\u0275mpd"](1073742336,R.d,R.d,[]),o["\u0275mpd"](1073742336,T.a,T.a,[]),o["\u0275mpd"](1073742336,G.a,G.a,[]),o["\u0275mpd"](1073742336,E.g,E.g,[]),o["\u0275mpd"](1073742336,J.c,J.c,[]),o["\u0275mpd"](1073742336,S.g,S.g,[]),o["\u0275mpd"](1073742336,O.l,O.l,[[2,O.d],[2,L.HAMMER_LOADER]]),o["\u0275mpd"](1073742336,N.e,N.e,[]),o["\u0275mpd"](1073742336,O.v,O.v,[]),o["\u0275mpd"](1073742336,U.j,U.j,[]),o["\u0275mpd"](1073742336,Z.c,Z.c,[]),o["\u0275mpd"](1073742336,B.c,B.c,[]),o["\u0275mpd"](1073742336,V.b,V.b,[]),o["\u0275mpd"](512,D.b,D.b,[]),o["\u0275mpd"](1024,D.a,function(s,n){return[{wrappers:[{name:"addons",component:Q.a}],extensions:[{name:"addons",extension:{postPopulate:H.a}}]},K.b(s),{types:[{name:"input",component:W.a,wrappers:["form-field"]},{name:"checkbox",component:Y.a,wrappers:["form-field"]},{name:"radio",component:z.a,wrappers:["form-field"]},{name:"select",component:X.a,wrappers:["form-field"]},{name:"textarea",component:$.a,wrappers:["form-field"]},{name:"multicheckbox",component:ss.a,wrappers:["form-field"]}],wrappers:[{name:"form-field",component:ns.a}]},K.b(n),{validationMessages:[{name:"required",message:"This field is required"},{name:"minlength",message:as}]}]},[D.b,D.b]),o["\u0275mpd"](1073742336,K.a,K.a,[D.b,[2,D.a]]),o["\u0275mpd"](1073742336,ls.h,ls.h,[]),o["\u0275mpd"](1073742336,es.b,es.b,[]),o["\u0275mpd"](1073742336,O.m,O.m,[]),o["\u0275mpd"](1073742336,O.t,O.t,[]),o["\u0275mpd"](1073742336,rs.b,rs.b,[]),o["\u0275mpd"](1073742336,ps.c,ps.c,[]),o["\u0275mpd"](1073742336,ts.a,ts.a,[]),o["\u0275mpd"](1073742336,l["\u0275angular_packages_forms_forms_bc"],l["\u0275angular_packages_forms_forms_bc"],[]),o["\u0275mpd"](1073742336,l.ReactiveFormsModule,l.ReactiveFormsModule,[]),o["\u0275mpd"](1073742336,ms.a,ms.a,[]),o["\u0275mpd"](1073742336,is.a,is.a,[]),o["\u0275mpd"](1073742336,ds.a,ds.a,[]),o["\u0275mpd"](1073742336,os,os,[]),o["\u0275mpd"](1073742336,cs.s,cs.s,[[2,cs.y],[2,cs.p]]),o["\u0275mpd"](1073742336,p,p,[]),o["\u0275mpd"](1024,cs.n,function(){return[[{path:"",component:us.a,data:r}]]},[])])})},FMHf:function(s,n){s.exports='<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { ReactiveFormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { FormlyModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/core\'</span>;\n<span class="hljs-keyword">import</span> { FormlyBootstrapModule } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ngx-formly/bootstrap\'</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">minlengthValidationMessages</span>(<span class="hljs-params">err, field</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-string">`Should have atleast <span class="hljs-subst">${field.templateOptions.minLength}</span> characters`</span>;\n}\n\n<span class="hljs-keyword">import</span> { AppComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./app.component\'</span>;\n<span class="hljs-meta">@NgModule</span>({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyBootstrapModule,\n    FormlyModule.forRoot({\n      validationMessages: [\n        { name: <span class="hljs-string">\'required\'</span>, message: <span class="hljs-string">\'This field is required\'</span> },\n        { name: <span class="hljs-string">\'minlength\'</span>, message: minlengthValidationMessages },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppModule { }\n'},amrZ:function(s,n){s.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\n\nexport function minlengthValidationMessages(err, field) {\n  return `Should have atleast ${field.templateOptions.minLength} characters`;\n}\n\nimport { AppComponent } from './app.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyBootstrapModule,\n    FormlyModule.forRoot({\n      validationMessages: [\n        { name: 'required', message: 'This field is required' },\n        { name: 'minlength', message: minlengthValidationMessages },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n  ],\n})\nexport class AppModule { }\n"},hyt6:function(s,n){s.exports='<form [formGroup]="form" (ngSubmit)="submit()">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n  <button type="submit" class="btn btn-primary submit-button">Submit</button>\n</form>\n'},txKx:function(s,n){s.exports="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {};\n\n  fields: FormlyFieldConfig[] = [{\n    key: 'password',\n    validators: {\n      fieldMatch: {\n        expression: (control) => {\n          const value = control.value;\n\n          return value.passwordConfirm === value.password\n            // avoid displaying the message error when values are empty\n            || (!value.passwordConfirm || !value.password);\n        },\n        message: 'Password Not Matching',\n        errorPath: 'passwordConfirm',\n      },\n    },\n    fieldGroup: [\n      {\n        key: 'password',\n        type: 'input',\n        templateOptions: {\n          type: 'password',\n          label: 'Password',\n          placeholder: 'Must be at least 3 characters',\n          required: true,\n          minLength: 3,\n        },\n      },\n      {\n        key: 'passwordConfirm',\n        type: 'input',\n        templateOptions: {\n          type: 'password',\n          label: 'Confirm Password',\n          placeholder: 'Please re-enter your password',\n          required: true,\n        },\n      },\n    ],\n  }];\n\n  submit() {\n    if (this.form.valid) {\n      alert(JSON.stringify(this.model));\n    }\n  }\n}\n"},uKvD:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">form</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"form"</span> (<span class="hljs-attr">ngSubmit</span>)=<span class="hljs-string">"submit()"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">formly-form</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span> [<span class="hljs-attr">fields</span>]=<span class="hljs-string">"fields"</span> [<span class="hljs-attr">options</span>]=<span class="hljs-string">"options"</span> [<span class="hljs-attr">form</span>]=<span class="hljs-string">"form"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">formly-form</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"btn btn-primary submit-button"</span>&gt;</span>Submit<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n'}}]);